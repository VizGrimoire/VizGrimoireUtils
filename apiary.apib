FORMAT: 1A
HOST: http://demo.bitergia.com

# vizGrimoire API
API for accessing vizGrimoire variables and other data about a software
development project, or a collection of those.

Main abstractions of the API:

* **Variable**: Abstract item, that will have a unique name, and will
represent some property or measurement of the analyzed project,
with some specific semantics. A variable can be an specific
measurement (such as number of commits), but also other kinds of data
(such as developer name) or a structured combination of specific
measurements or other kinds of data (such as a time series of the
number of commits per month, or a list of developers).
* **Condition**. Qualifier that determine the context of a value for a
variable. For example, the variable "number of commits" can be
qualified with the conditions "scope: all the project", "period:
from 2012-01-01 to 2012-12-31". Values are always of a variable
qualified by a set of conditions.
* **Value**. The specific value of a variable under speciic conditions.
For example, the number of commits of the OpenStack project for all
its life previous to 2014-01-08; the time series of the number of
commits per month for the months of Jan, Feb and March 2013 for
subproject XXX, or the list of the top ten developers with most
commits.
* **Family**. Mainly (collection) of variables that have some semantic
relationship, usually coming from the same or similar tables in the
database. For example, variables directly related to the source code
management system (SCM family), to the issue tracking system (ITS family),
or maybe to the demography studies (Demos family).
* **Set**. Set of variables that can be found together in the same
JSON document. They are defined for convenience, to avoid having to
specify in a single GET request a potentially large collection of
variables. This would be much more convenient for the static API,
for which in fact metrics are already grouped in JSON documents.

# Group Variables
Variables (and values for them) are provided as resources. In this
hierarchy, each leaf resource corresponds to a variable offered by
the API, and its value. Variables are structured in families, which
act as collections of variables. Each family, such as /vars/scm,
is a collection providing links to the available variables of that
family. Each variable, such as /vars/scm/commits provides
information about that variable, and the value of that variable.

## Collection of families of variables [/var]
### List of all families of variables [GET]

Root of the hierarchy, acts as a collection of families of variables,
providing links to all families of variables with available values.

+ Response 200 (application/json)

    + Body
    
            {"items": [
                {"href": "/var/scm"},
                {"href": "/var/its"},
                {"href": "/var/mls"},
                {"href": "/var/wiki"},
                {"href": "/var/irc"}
                ],
            "desc": "List of families of variables"
            }

## Variables family [/var/{fam}]
Collection of variables in a family

+ Parameters

    + fam (required, string, `scm`) ... Name of variables family.

        + Values
            + `scm`
            + `its`
            + `mls`
            + `wiki`
            + `irc`

### List all variables in the family [GET]

+ Response 200 (application/json)

    + Body

            {"items": [
                {"href": "/var/scm/commits"},
                {"href": "/var/scm/authors"},
                {"href": "/var/scm/ts_commits"},
                {"href": "/var/scm/list_authors"}
                ]
            "desc": "List of variables for the source code management family"
            }

## SCM variables family [/var/scm]
Collection of variables in the SCM family

### List all variables in the SCM family [GET]

+ Response 200 (application/json)

    + Body

            {"items": [
                {"href": "/var/scm/commits"},
                {"href": "/var/scm/ncommits"},
                {"href": "/var/scm/tscommits"},
                {"href": "/var/scm/authors"},
                {"href": "/var/scm/nauthors"},
                {"href": "/var/scm/tsauthors"},
                {"href": "/var/scm/committers"},
                {"href": "/var/scm/ncommitters"},
                {"href": "/var/scm/tscommitters"},
                {"href": "/var/scm/branches"},
                {"href": "/var/scm/nbranches"},
                {"href": "/var/scm/tsbranches"},
                {"href": "/var/scm/nlines_add"},
                {"href": "/var/scm/tslines_add"},
                {"href": "/var/scm/nlines_rm"},
                {"href": "/var/scm/tslines_rm"},
                {"href": "/var/scm/nfiles"},
                {"href": "/var/scm/tsfiles"},
                {"href": "/var/scm/nrepos"},
                {"href": "/var/scm/tsrepos"}
                ]
            "desc": "List of variables for the source code management family"
            }

## Variable [/var/{fam}/{variable}]
+ Parameters
    + fam (required, string, `scm`) ... Name of variables family
    + variable (required, string, `commits`) ... Name of variable

### Values for a given variable [GET]
General structure for all resources providing value and context
data for a variable. List of actual resources for variables follow
below.

+ Response 200 (application/json)

        {"id": "scm/ts_commits",
         "type": "ts of commits",
         "desc": "Time serie of number of commits"
         "value": {
            "period": weeks,
            "first_date": "2013-12-25",
            "last_date": "2014-01-15",
            "values": [23, 23, 56, 34],
            "period_id": ["Dec 25 2013", "Jan 1 2014", "Jan 8 2014", "Jan 15 2014"]
            }
        }

## Number of commits [/var/scm/ncommits]
### Number of commits in SCM repos [GET]

+ Response 200 (application/json)

        {"id": "scm/ncommits",
        "type": "int",
        "desc": "Number of commits in SCM repositories",
        "value": 2245
        }

## Timeserie of commits [/var/scm/tscommits]
### Timeserie of commits in SCM repos [GET]

+ Response 200 (application/json)

        {"id": "scm/ts_commits",
         "type": "ts of int",
         "desc": "Time serie of number of commits in SCM repo(s)",
         "value": {
            "period": "weeks",
            "first_date": "2013-12-25",
            "last_date": "2014-01-15",
            "values": [23, 23, 56, 34],
            "period_id": ["Dec 25 2013", "Jan 1 2014", "Jan 8 2014", "Jan 15 2014"]
            }
        }

## List of commits [/var/scm/commits]
### List of commits in SCM repos [GET]

+ Response 200 (application/json)

        {"id": "scm/commits",
         "type": "list of commit",
         "desc": "List of commits in SCM repositories",
         "value": ["/var/scm/commit/43", "/var/scm/commit/47"]
        }

## Commit record [/var/scm/commits/{id}]
+ Parameters
    + id (required, `num`, 45) ... Commit number

### Information for a commit record in SCM repos [GET]

+ Response 200 (application/json)

        {"id": "scm/commits/45",
         "scmid" = "fe23243edefdf4fedfeerrere",
         "author" = 476,
         "committer" = 45,
         "date_author" = "2014-01-30T20:03:04",
         "date_commit" = "2014-02-02T20:03:04",
         "lines_add" = 345,
         "lines_rem" = 254
        }

## Number of authors [/var/scm/nauthors]
### Number of authors in SCM repos [GET]

+ Response 200 (application/json)

        {"id": "scm/nauthors",
         "type": "int",
         "desc": "Number of authors in SCM repositories"
         "value": { 207 }
        }

## Number of branches [/var/scm/nbranches]
### Number of active branches in SCM repos [GET]

+ Response 200 (application/json)

        {"id": "scm/nbranches",
         "type": "int",
         "desc": "Number of active branches in SCM repositories"
         "value": { 15 }
        }
        
## Number of files [/var/scm/nfiles]
### Number of files changed by commits in SCM repos [GET]

+ Response 200 (application/json)

        {"id": "scm/nfiles",
         "type": "int",
         "desc": "Number of files changed by commits in SCM repositories"
         "value": { 87 }
        }
        
## Number of authors [/var/scm/ncommitters]
### Number of authors in SCM repos [GET]

+ Response 200 (application/json)

        {"id": "scm/ncommitters",
         "type": "int",
         "desc": "Number of committers in SCM repositories"
         "value": { 27 }
        }
        
## Number of lines added [/var/scm/nlines_add]
### Number of lines added in SCM repos [GET]

+ Response 200 (application/json)

        {"id": "scm/nlines_add",
         "type": "int",
         "desc": "Number of lines added in SCM repositories"
         "value": { 13446 }
        }
        
## Number of lines removed [/var/scm/nlines_rm]
### Number of lines removed in SCM repos [GET]

+ Response 200 (application/json)

        {"id": "scm/nlines_rm",
        "type": "int",
        "desc": "Number of lines removed in SCM repositories"
        "value": { 20355 }
        }

## Number of repositories [/var/scm/nrepos]
### Number of active SCM repos [GET]

+ Response 200 (application/json)

        {"id": "scm/nrepos",
         "type": "int",
         "desc": "Number of active SCM repo(s)"
         "value": { 20355 }
        }
        
# Group Sets
Standard sets of variables provided by the  **vizGrimoire API**

Each set provides a set of variables, with the corresponding values. Sets
are useful for asking for (and obtaining) several variables at once.

Components of a set:

+ "id": unique name, which is the resource name after "/sets/"
+ "desc": description (text describing the set).
+ "templated": boolean describing whether the set name is templated.
Being templated means that the resource name includes one of more
strings which is in fact a template to be substituted by its value
before invocation. Those templates are condition names, such as
"org" for organizations.
+ "vars": list of variables, with values.

## Collection of sets [/sets]
### List all avaialble sets of variables [GET]
+ Response 200 (application/json)

        {"sets": [
            {"id": "scm/basic",
             "href": "/sets/scm/basic",
             "templated": false,
             "desc": "Basic variables from source code management repositories"
             "vars": [
                {"id": "scm/ncommits"},
                {"id": "scm/nauthors"},
                {"id": "scm/ncommitters"},
                {"id": "scm/ts_commits"},
                {"id": "scm/ts_authors"},
                {"id": "scm/ts_committers"}
                ]
            },
            {
             "id": "{org/basic/{?org}}",
             "href": "/sets/org/basic/{?org}",
             "templated": true,
             "parameters":
                {"org":
                    {"name": "Organization",
                     "href": "/cond/scope/org"}}
             "desc": "Basic variables for an organization (eg, a company)"
             "vars": [
                {"id": "scm/ncommits"},
                {"id": "scm/nauthors"},
                {"id": "scm/ncommitters"},
                {"id": "scm/ts_commits"},
                {"id": "scm/ts_authors"},
                {"id": "scm/ts_committers"}
                ],
             "cond": "scope=org/{?org}"
            }
            ]
        }

## Set providing basic SCM variables [/sets/scm/basic]
### Basic variables from SCM repositories [GET]
+ Response 200 (application/json)

        {"id": "scm/basic",
         "templated": false,
         "desc": "Basic variables from source code management repositories"
         "vars": [
            {"common": true,
             "type": int,
             "vars": [
                {"id": "scm/ncommits",
                 "desc": "Number of commits in SCM repositories"
                 "value": { 2245 }
                },
                {"id": "scm/nauthors",
                 "desc": "Number of authors in SCM repositories"
                 "value": { 207 }
                },
                {"id": "scm/ncommitters",
                 "desc": "Number of committers in SCM repositories"
                 "value": { 27 }
                }]
            },
            {"common": true,
             "type": "ts of int",
             "value": {
                "period": weeks,
                "first_date": "2013-12-25",
                "last_date": "2014-01-15",
                "period_id": [`Dec 25 2013`, `Jan 1 2014`, `Jan 8 2014`, `Jan 15 2014`]
                }
             "vars": [
                {"id": "scm/ts_commits",
                 "desc": "Time serie of number of commits in SCM repo(s)"
                 "value": {
                    "values": [23, 23, 56, 34],
                    }
                },
                {"id": "scm/ts_authors",
                 "desc": "Time serie of number of authors in SCM repo(s)"
                 "value": {
                    "values": [12, 9, 11, 13]
                    }
                },
                {"id": "scm/ts_committers"
                 "desc": "Time serie of number of committers in SCM repo(s)"
                 "value": {
                    "values": [10, 7, 6, 10]
                    }
                }]
            }]
        }
